{
  "imports": [
    "github.com/project-flogo/flow",
    "github.com/project-flogo/contrib/activity/noop",
    "github.com/tibco/flogo-general/src/app/General/activity/rest",
    "github.com/tibco/flogo-general/src/app/General/activity/mapper",
    "github.com/tibco/flogo-general/src/app/General/activity/log",
    "github.com/project-flogo/contrib/activity/actreturn",
    "rest_1 github.com/tibco/flogo-general/src/app/General/trigger/rest"
  ],
  "name": "UnitTesting",
  "description": "",
  "version": "1.0.0",
  "type": "flogo:app",
  "appModel": "1.1.1",
  "tags": [],
  "triggers": [
    {
      "ref": "#rest_1",
      "name": "tibco-wi-rest",
      "description": "Simple REST Trigger",
      "settings": {
        "port": 9999,
        "APISpecUpdate": false,
        "swagger": "",
        "swaggerVersion": "v2",
        "apiVersion": "1.0.0",
        "secureConnection": false,
        "serverKey": "",
        "caCertificate": ""
      },
      "id": "ReceiveHTTPMessage",
      "handlers": [
        {
          "description": "This flow helps us to get the zipcode of the customer",
          "settings": {
            "Method": "GET",
            "reqType": "application/json",
            "Path": "/test2/{id}",
            "OutputValidation": false
          },
          "action": {
            "ref": "github.com/project-flogo/flow",
            "settings": {
              "flowURI": "res://flow:GetZipcode"
            },
            "input": {
              "pathParams": {
                "mapping": {
                  "id": "=$.pathParams.id"
                }
              },
              "headers": "=$.headers"
            },
            "output": {
              "code": "=$.code",
              "data": "=$.data"
            }
          },
          "reply": {
            "code": 200,
            "configureResponseCodes": false,
            "message": {}
          },
          "schemas": {
            "reply": {
              "data": {
                "type": "json",
                "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"zipcode\":{\"type\":\"string\"}}}",
                "fe_metadata": "{ \"zipcode\": \"92998-3874\"}"
              },
              "responseBody": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}",
                "fe_metadata": "{\"type\":\"object\",\"properties\":{\"body\":{\"type\":\"any\"},\"headers\":{\"type\":\"object\"}}}"
              }
            },
            "output": {
              "pathParams": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]}",
                "fe_metadata": "[{\"parameterName\":\"id\",\"type\":\"string\"}]"
              },
              "headers": {
                "type": "json",
                "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
              }
            }
          },
          "name": "GetZipcode"
        }
      ]
    }
  ],
  "resources": [
    {
      "id": "flow:GetZipcode",
      "data": {
        "name": "GetZipcode",
        "description": "This flow helps us to get the zipcode of the customer",
        "links": [
          {
            "id": 1,
            "from": "StartActivity",
            "to": "InvokeRESTService",
            "type": "label",
            "label": "StartActivity to InvokeRESTService"
          },
          {
            "id": 2,
            "from": "InvokeRESTService",
            "to": "Mapper",
            "type": "label",
            "label": "InvokeRESTService to Mapper"
          },
          {
            "id": 3,
            "from": "Mapper",
            "to": "LogMessage",
            "type": "label",
            "label": "Mapper to LogMessage"
          },
          {
            "id": 4,
            "from": "LogMessage",
            "to": "Return",
            "type": "label",
            "label": "LogMessage to Return"
          }
        ],
        "tasks": [
          {
            "id": "StartActivity",
            "name": "StartActivity",
            "description": "NoOp Activity",
            "activity": {
              "ref": "#noop"
            }
          },
          {
            "id": "InvokeRESTService",
            "name": "InvokeRESTService",
            "description": "Simple REST Activity",
            "settings": {
              "retryOnError": {
                "count": 0,
                "interval": 0
              }
            },
            "activity": {
              "ref": "#rest",
              "input": {
                "enableASR": false,
                "swagger": "",
                "authorization": false,
                "authorizationConn": "",
                "serviceName": "",
                "resourcePath": "",
                "Method": "GET",
                "Uri": "https://jsonplaceholder.typicode.com/users/{id}",
                "requestType": "application/json",
                "Use certificate for verification": false,
                "mutualAuth": false,
                "Client Certificate": "",
                "Client Key": "",
                "Server Certificate": "",
                "disableKeepAlives": false,
                "Timeout": 0,
                "proxy": "",
                "host": "",
                "pathParams": {
                  "mapping": {
                    "id": "=$flow.pathParams.id"
                  }
                },
                "headers": "=$flow.headers"
              },
              "output": {
                "configureResponseCodes": false,
                "responseType": "application/json",
                "responseOutput": "JSON Object"
              },
              "schemas": {
                "input": {
                  "pathParams": {
                    "type": "json",
                    "value": "{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]}",
                    "fe_metadata": "[{\"parameterName\":\"id\",\"type\":\"string\"}]"
                  },
                  "headers": {
                    "type": "json",
                    "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                    "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                  }
                },
                "output": {
                  "responseBody": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"number\"},\"name\":{\"type\":\"string\"},\"username\":{\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"address\":{\"type\":\"object\",\"properties\":{\"street\":{\"type\":\"string\"},\"suite\":{\"type\":\"string\"},\"city\":{\"type\":\"string\"},\"zipcode\":{\"type\":\"string\"},\"geo\":{\"type\":\"object\",\"properties\":{\"lat\":{\"type\":\"string\"},\"lng\":{\"type\":\"string\"}}}}},\"phone\":{\"type\":\"string\"},\"website\":{\"type\":\"string\"},\"company\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"catchPhrase\":{\"type\":\"string\"},\"bs\":{\"type\":\"string\"}}}}}",
                    "fe_metadata": "{\r\n  \"id\": 1,\r\n  \"name\": \"Leanne Graham\",\r\n  \"username\": \"Bret\",\r\n  \"email\": \"Sincere@april.biz\",\r\n  \"address\": {\r\n    \"street\": \"Kulas Light\",\r\n    \"suite\": \"Apt. 556\",\r\n    \"city\": \"Gwenborough\",\r\n    \"zipcode\": \"92998-3874\",\r\n    \"geo\": {\r\n      \"lat\": \"-37.3159\",\r\n      \"lng\": \"81.1496\"\r\n    }\r\n  },\r\n  \"phone\": \"1-770-736-8031 x56442\",\r\n  \"website\": \"hildegard.org\",\r\n  \"company\": {\r\n    \"name\": \"Romaguera-Crona\",\r\n    \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n    \"bs\": \"harness real-time e-markets\"\r\n  }\r\n}"
                  },
                  "headers": {
                    "type": "json",
                    "value": "{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false},\"Set-Cookie\":{\"type\":\"string\",\"visible\":false}},\"required\":[]}",
                    "fe_metadata": "[{\"parameterName\":\"Accept\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Charset\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Accept-Encoding\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Type\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Content-Length\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Connection\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Pragma\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false},{\"parameterName\":\"Set-Cookie\",\"type\":\"string\",\"repeating\":\"false\",\"required\":\"false\",\"visible\":false}]"
                  }
                }
              },
              "feSchemaMap": {}
            }
          },
          {
            "id": "Mapper",
            "name": "Mapper",
            "description": "Mapper Activity",
            "activity": {
              "ref": "#mapper",
              "input": {
                "input": {
                  "mapping": {
                    "zipcode": "=$activity[InvokeRESTService].responseBody.address.zipcode"
                  }
                }
              },
              "schemas": {
                "input": {
                  "input": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"zipcode\":{\"type\":\"string\"}}}",
                    "fe_metadata": "{\"zipcode\": \"92998-3874\"}"
                  }
                },
                "output": {
                  "output": {
                    "type": "json",
                    "value": "{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"zipcode\":{\"type\":\"string\"}}}",
                    "fe_metadata": "{\n  \"zipcode\": \"92998-3874\"\n}"
                  }
                }
              },
              "feSchemaMap": {}
            }
          },
          {
            "id": "LogMessage",
            "name": "LogMessage",
            "description": "Simple Log Message Activity",
            "activity": {
              "ref": "#log",
              "input": {
                "Log Level": "INFO",
                "flowInfo": false,
                "message": "=$activity[Mapper].output.zipcode",
                "logLevel": ""
              }
            }
          },
          {
            "id": "Return",
            "name": "Return",
            "description": "Simple Return Activity",
            "activity": {
              "ref": "#actreturn",
              "settings": {
                "mappings": {
                  "code": 200,
                  "data": {
                    "mapping": {
                      "zipcode": "=$activity[Mapper].output.zipcode"
                    }
                  }
                }
              }
            }
          }
        ],
        "fe_metadata": "eyJTdGFydEFjdGl2aXR5Ijp7IngiOjc3LCJ5Ijo4NX0sIkludm9rZVJFU1RTZXJ2aWNlIjp7IngiOjIxNywieSI6ODJ9LCJNYXBwZXIiOnsieCI6NDM2LCJ5Ijo4NH0sIkxvZ01lc3NhZ2UiOnsieCI6NjQwLCJ5Ijo4NX0sIlJldHVybiI6eyJ4Ijo4NDQsInkiOjc5fX0=",
        "metadata": {
          "input": [
            {
              "name": "pathParams",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"id\":{\"type\":\"string\"}}"
              }
            },
            {
              "name": "headers",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}}"
              }
            },
            {
              "name": "requestURI",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            }
          ],
          "output": [
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "data",
              "type": "object",
              "schema": {
                "type": "json",
                "value": "{\"zipcode\":{\"type\":\"string\"}}"
              }
            }
          ],
          "fe_metadata": {
            "input": "{\"type\":\"object\",\"title\":\"ReceiveHTTPMessage\",\"properties\":{\"pathParams\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"}},\"required\":[]},\"headers\":{\"type\":\"object\",\"properties\":{\"Accept\":{\"type\":\"string\",\"visible\":false},\"Accept-Charset\":{\"type\":\"string\",\"visible\":false},\"Accept-Encoding\":{\"type\":\"string\",\"visible\":false},\"Content-Type\":{\"type\":\"string\",\"visible\":false},\"Content-Length\":{\"type\":\"string\",\"visible\":false},\"Connection\":{\"type\":\"string\",\"visible\":false},\"Cookie\":{\"type\":\"string\",\"visible\":false},\"Pragma\":{\"type\":\"string\",\"visible\":false}},\"required\":[]},\"requestURI\":{\"type\":\"string\",\"required\":false},\"method\":{\"type\":\"string\",\"required\":false}}}",
            "output": "{\"type\":\"object\",\"title\":\"Inputs\",\"properties\":{\"code\":{\"type\":\"integer\",\"required\":false},\"data\":{\"$schema\":\"http://json-schema.org/draft-04/schema#\",\"type\":\"object\",\"properties\":{\"zipcode\":{\"type\":\"string\"}}}},\"required\":[]}"
          }
        },
        "explicitReply": true
      }
    }
  ],
  "properties": [],
  "connections": {},
  "contrib": "W3sicmVmIjoiZ2l0aHViLmNvbS90aWJjby9mbG9nby1nZW5lcmFsL3NyYy9hcHAvR2VuZXJhbCIsImlkIjoiR2VuZXJhbCIsInZlcnNpb24iOiIxLjYuNCIsInRhZyI6IjEuNi40LWIwMiIsIm5hbWUiOiJHZW5lcmFsIiwiczNsb2NhdGlvbiI6IlRpYmNvL0dlbmVyYWwiLCJpc1VzZXJFeHRlbnNpb24iOmZhbHNlfV0=",
  "metadata": {
    "endpoints": [
      {
        "protocol": "http",
        "port": "9999",
        "spec": {
          "name": "UnitTesting",
          "version": "1.0.0"
        },
        "title": "ReceiveHTTPMessage",
        "swagger": {
          "swagger": "2.0",
          "info": {
            "title": "UnitTesting",
            "version": "1.0.0",
            "description": "Simple REST Trigger"
          },
          "paths": {
            "/test2/{id}": {
              "get": {
                "summary": "GetZipcode",
                "operationId": "get_test2_id",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "description": "Request parameter",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Rest Response",
                    "schema": {
                      "$ref": "#/definitions/schema1"
                    }
                  }
                },
                "description": "This flow helps us to get the zipcode of the customer"
              }
            }
          },
          "definitions": {
            "schema1": {
              "type": "object",
              "properties": {
                "zipcode": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    ],
    "flogoVersion": "2.25.3"
  }
}